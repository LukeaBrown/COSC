Skip to content
Search or jump to…
Pull requests
Issues
Codespaces
Marketplace
Explore
 
@LukeaBrown 
LukeaBrown
/
COSC
Private
Code
Issues
Pull requests
Actions
Projects
1
Security
Insights
Settings
COSC/OS/Day 1/Notes
@LukeaBrown
LukeaBrown Create Notes
Latest commit 1985101 16 days ago
 History
 1 contributor
135 lines (107 sloc)  3.66 KB

============================================================
						Powershell
============================================================
Requires <<<System.Management.Automation.dll>>> to run.

#Do Loop
	$a = 1
	do
	{
	"Starting Loop $a"
	$a
	$a++
	"Now `$a is $a"
	}while ($a -le 5)

#While Loop
	$var = 2
	while ($var -le 5)
	{
	Write-Host The value of var is: $var
	$var++
	}
	Write-Host End of while loop.

#Foreach Loop
	$Collection = 1..5
	foreach ($item in $Collection) {
    	Write-Host The value of Item is: $item
	}
	Write-Host End of foreach loop
	
	#For Loop
	for (($x=' '),($fgcolor = $colors | Get-Random) ;$x.length -le 30;($x=$x+'x'),($fgcolor = $colors | Get-Random)) {
	
	}

#If Statements
	$a = 3
	if ($a -gt 2){
    	Write-Host "The value of $a is greater than 2"
	}
	elsif ($a -eq 2){
    	Write-Host "The value of $a is equal to 2"
	}
	else{
    	Write-Host "The value of $a is not greater than 2"
	}
	
Powershell ExecutionPolicies are not persistent, they are specific to the powershell session

============================================================
						Profiles
============================================================
Powershell:
	- All Users, All Hosts
	- All Users, Current Host
	- Current User, All Hosts
	- Current User, Current Hosts
	
ISE:
	- Current User, Current Host
	- All Users, Current Host
	
Profile Variables
	- $PSHOME
	- $HOME
	
Variable Values
	- $profile | Get-Member -type NoteProperty
	
Test if profile exists
	- Test-Path -Path $profile.CurrentUserAllHosts
	
Make new profile
	- New-Item -ItemType File -Path $profile -force

============================================================
						Remoting
============================================================
PSSession
	Get-PSSessionConfiguration
	
Start PSSession
	Enter-PSSession -ComputerName Server1
	
Queries current network profiles.
	Get-ChildItem 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\NetworkList\Profiles'
	
	Network Location Category	Data Value
	
	Public						0 (ZERO)
	Private						1
	Domain						2

============================================================
			Powershell Remoting Security
============================================================
WinRM uses Kerberos for authentication by default.
	- It also encrypts all communications with a per-session AES-256 symmetric key.
	- Uses ports 5985 for HTTP by default or 5986 for HTTPS. HTTPS requires extra set-up for SSL certificates.

============================================================
			Temporary and Persistant Sessions
============================================================
#Creates 1-to-1 Temporary Session
	Invoke-Command -ComputerName File-Server {Get-Service}
	
#Running a Temporary Session as a Job (in the background)
	Invoke-Command -ComputerName File-Server,Domain-Controll,Workstation2 {Get-Service} -asjob
	
#Displays the job's Results
	Receive-Job <job #> 

============================================================
					.NET API Framework
============================================================
Locating .NET API Functions
	- NET APIs are broken into namespaces. 
	- Microsoft .NET API Browser

#Using a Namespace
	[System.Text.Encoding]::GetBytes()
	
#Converts the text into a Unicode Array
	([System.Text.Encoding]::Unicode.GetBytes("This Might be important")) 
	
#Download a File with Powershell
	$url = "http://downloads.volatilityfoundation.org/releases/2.6/volatility_2.6_win64_standalone.zip"
	$output = "$PSScriptRoot\volatility_2.6_win64_standalone.zip"
	$start_time = Get-Date

	$wc = New-Object System.Net.WebClient #Create a new Webclient object
	$wc.DownloadFile($url, $output) #Use the Downloadfile method to download a file

	(New-Object System.Net.WebClient).DownloadFile($url, $output)
Footer
© 2022 GitHub, Inc.
Footer navigation
Terms
Privacy
Security
Status
Docs
Contact GitHub
Pricing
API
Training
Blog
About
COSC/Notes at main · LukeaBrown/COSC

============================================================
Alternate Data Streams (ADS)
============================================================
- ADS was first introduced to NTFS in Windows NT 3.1 and was Microsoft’s attempt at implementing filesystem forks in order to maintain compatibility with other filesystems like Apple’s HFS+ and Novell’s NWFS and NSS.

- In NTFS – files consists of attributes, security settings, mainstreams and alternate streams. By default, only the mainstream is visible.

- ADS has been used to store metadata, like file attributes, icons, image thumbnails.

- Great way to hide data using NTFS.

- Can be scanned by antivirus (Windows Defender Smartscreen is ADS aware).

- Does not change the MD5 hash of the file.

- Deleted once copied to a fat32.

- Cannot be disabled.

- [filename.extension]:[alternate_stream_name]:$DATA

============================================================
ADS with CLI
============================================================
echo Join the Empire > Imperial.txt

dir Imperial.txt
  Volume in drive C is OS
  Volume Serial Number is A214-0667

  Directory of c:\Users\student\demo

  11/28/2022  03:38 PM                18 Imperial.txt
                1 File(s)             18 bytes
                0 Dir(s)  15,779,483,648 bytes free

echo This is Fulcrum > Imperial.txt:Rebel.Message

dir Imperial.txt
  Volume in drive C is OS
  Volume Serial Number is A214-0667

  Directory of c:\Users\student\demo

  11/28/2022  03:40 PM                18 Imperial.txt
                1 File(s)             18 bytes
                0 Dir(s)  15,779,483,648 bytes free
                
more < Imperial.txt:Rebel.Message

  This is Fulcrum
  
streams.exe -d .\coffee.txt

============================================================
ADS with powershell
============================================================
Set-Content .\coffee.txt -Value "Bank account Information" -Stream Bank.Info
gci .\coffee.txt
Get-Item .\coffee.txt -Stream *
Get-Content .\coffee.txt -Stream Bank.Info

rm .\coffee.txt -Stream bank.info

Set-Content notepad.exe .\coffee.txt:Sercet.vbs

============================================================
			Host Enumeration Questionnaire
============================================================
Where am I?
	hostname
	uname -a (More Detailed)
	
Who am I?
	whoami
	id (More Detailed)
	who (Who else is logged on)
	w (What are other logged on users doing)

What am I allowed to do?
	sudo -l (What can you sudo)
	which
		- Displays commands executable
	whereis
		- Displays executable file and other documentation files

Who can I talk to? "Networking"
	ifconfig (Deprecated)
		ip addr
	netstat (Deprecated)
		ss -ntlp
	arp (Deprecated)
		ip neigh
	route (Deprecated)
		ip route

What's going on?
	ss -ntlp

Why's that happening?
	

============================================================
		    Linux Filesystem Hierarchy
============================================================
Everything in the filesystem is a file, including directories.

/ 	    - Root of the filesytem
/bin	- executable programs (binaries) which are needed in single user mode
/boot
/dev	- Extra device files
/etc	- Base Location for config files
/home	- User home directory
/lib	- Common used libraries for files to draw from
/media
/mnt	- Placeholder for mounting file shares
/opt	- Placeholder for things user installs
/proc	- Information relating to processes running on the system
/root	- Roots home directory
/run	- Containts info from the current instance of the system from the start of its runtime
/sbin	- Contains binaries only accessible by the root user
/srv    - Placeholder for server resources
/sys    - Info about the system
/tmp    - Temporary files
/usr    - Universal System Resources
/var    - Variable data

============================================================
                        Permissions
============================================================
421     421     421
rw-     rw-     r--
User    Group   Other

r - Read
w - write
x - execute

SUID - 4
    
SGID - 2
    
Sticky Bit - 1
    
<SUID/GUID/Sticky Bit>471

============================================================
			Extra
============================================================
man hier

/etc/hosts

============================================================
					BIOS vs UEFI
============================================================
BIOS
	MBR
		Active partition identified in the Partition Table
		Partition Boot Record (PBR) on the active partition is loaded
		Code in the PBR loads bootmgr
	Windows Boot Manager (bootmgr)
	BCD Store
	OS Loader
		winload.exe or winresume.exe
			Loads Kernel (ntoskrnl.exe)

UEFI
	GPT
	UEFI Boot Manager (bootmgrfw.efi)
	BCD Store
	OS Loader
		winload.efi or winresume.efi
			Loads Kernel (ntoskrnl.exe)

============================================================
				Windows Pre-Boot Process
============================================================
										NTLDR.exe <Kernel 5>
									  /
	Bios - MBR - (Volume Boot Sector) - bootmgr.exe <Kernel 6+>
	/
Post
	\
	UEFI - (GUID Partition Table) - (-->) - Boot Manager (bootmgrfw.efi)

============================================================
				Query Windows Services
============================================================
Query Service in Powershell
	sc.exe query <service>
	reg.exe query HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services | findstr <service name>

============================================================
							BIOS
============================================================
Check Bios Information
	sudo dmidecode -t bios
	
Check for EUFI System
	ls /sys/firmware

============================================================
				MBR Partition Table Scheme
============================================================

446 bytes	{ Boot Loader }
64 bytes	{ Partition Table }
2 bytes		{ Magic Number }

Find what disks are on the system
	lsblk
	df -h
	
Hexdumps
	xxd -l 512 -g 1 <Drive Name>
	
		00000000: eb 63 90 00 00 00 00 00 00 00 00 00 00 00 00 00  .c..............
		00000010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
		00000020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
		00000030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
		00000040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
		00000050: 00 00 00 00 00 00 00 00 00 00 00 80 01 00 00 00  ................
		00000060: 00 00 00 00 ff fa 90 90 f6 c2 80 74 05 f6 c2 70  ...........t...p
		00000070: 74 02 b2 80 ea 79 7c 00 00 31 c0 8e d8 8e d0 bc  t....y|..1......
		00000080: 00 20 fb a0 64 7c 3c ff 74 02 88 c2 52 bb 17 04  . ..d|<.t...R...
		00000090: f6 07 03 74 06 be 88 7d e8 17 01 be 05 7c b4 41  ...t...}.....|.A
		000000a0: bb aa 55 cd 13 5a 52 72 3d 81 fb 55 aa 75 37 83  ..U..ZRr=..U.u7.
		000000b0: e1 01 74 32 31 c0 89 44 04 40 88 44 ff 89 44 02  ..t21..D.@.D..D.
		000000c0: c7 04 10 00 66 8b 1e 5c 7c 66 89 5c 08 66 8b 1e  ....f..\|f.\.f..
		000000d0: 60 7c 66 89 5c 0c c7 44 06 00 70 b4 42 cd 13 72  `|f.\..D..p.B..r
		000000e0: 05 bb 00 70 eb 76 b4 08 cd 13 73 0d 5a 84 d2 0f  ...p.v....s.Z...
		000000f0: 83 d0 00 be 93 7d e9 82 00 66 0f b6 c6 88 64 ff  .....}...f....d.
		00000100: 40 66 89 44 04 0f b6 d1 c1 e2 02 88 e8 88 f4 40  @f.D...........@
		00000110: 89 44 08 0f b6 c2 c0 e8 02 66 89 04 66 a1 60 7c  .D.......f..f.`|
		00000120: 66 09 c0 75 4e 66 a1 5c 7c 66 31 d2 66 f7 34 88  f..uNf.\|f1.f.4.
		00000130: d1 31 d2 66 f7 74 04 3b 44 08 7d 37 fe c1 88 c5  .1.f.t.;D.}7....
		00000140: 30 c0 c1 e8 02 08 c1 88 d0 5a 88 c6 bb 00 70 8e  0........Z....p.
		00000150: c3 31 db b8 01 02 cd 13 72 1e 8c c3 60 1e b9 00  .1......r...`...
		00000160: 01 8e db 31 f6 bf 00 80 8e c6 fc f3 a5 1f 61 ff  ...1..........a.
		00000170: 26 5a 7c be 8e 7d eb 03 be 9d 7d e8 34 00 be a2  &Z|..}....}.4...
		00000180: 7d e8 2e 00 cd 18 eb fe 47 52 55 42 20 00 47 65  }.......GRUB .Ge
		00000190: 6f 6d 00 48 61 72 64 20 44 69 73 6b 00 52 65 61  om.Hard Disk.Rea
		000001a0: 64 00 20 45 72 72 6f 72 0d 0a 00 bb 01 00 b4 0e  d. Error........
		000001b0: cd 10 ac 3c 00 75 f4 c3 fa b7 12 e6 00 00 80 00  ...<.u..........
		000001c0: 21 02 83 07 26 20 00 08 00 00 df f7 ff 07 00 00  !...& ..........
		000001d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
		000001e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
		000001f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 55 aa  ..............U.
															|	|
															Magic Number

Byte to Byte Copy of File
	dd if=/dev/sda of=/MBRcopy bs=1 count=512
	
============================================================
						Boot Loader
============================================================
GRUB - Grand Unified Bootloader
	- Dynamically configurable with the capability to make changes during boot
    	Config File - /boot/grub/grub.cfg
		Altering boot entries, selecting different kernels, and modifying the initial RAM disk (initrd)

	- OS Selection screen where if no choice is made, default kernel specified in the grub configuration file

	- Bootloader (GRUB) passes text based kernel parameters (Ex. root=UUID=70cc6e89…,ro, splash). If not recognized, the option will be passed to init (i.e. ‘-s’ for single-user mode)

	- Kernel options are sometimes configurable at the menu with the ‘e’ key
	
Loads Kernel - linux /boot/vmlinuz-5.15.0-52-generic root=LABEL=cloudimg-rootfs ro  console=tty1 console=ttyS0
Loads additional items for kernel - initrd /boot/initrd.img-5.15.0-52-generic

============================================================
							Kernel
============================================================
	Uncompresses itself into RAM

	Establishes memory management, detects CPU type, page tables

	Mounts the root ‘/ ’ filesystem

	kernel is process 0 [kthreadd]

	Executes /sbin/init or systemd daemon, the very first process started by the kernel with a process ID (PID) of 1

	‘ls -l /sbin/init’ to determine which Init system you are using

============================================================
						Init
============================================================
    Configures the environment for the system

        Looks at the /etc/inittab

        Available run levels 0 - 6

        Identifies the default 'init' run level from /etc/inittab and uses that to load all the appropriate programs

        The entire startup process is handled by scripts

            /etc/init.d/

            Scripts that run ‘S’tart and ‘K’ill scripts out of applicable rc folders

        'service <service name> start | stop | restart | status | reload | …​''

        ‘service --status-all’

============================================================
Big Mike Got Killed In Russia
============================================================
BIOS

MBR

GRUB

Kernel

Init

Run Levels

============================================================
SysVinit vs systemd
============================================================
sysvinit - /sbin/init
	sevice manager
	process manager
	serial loading
	Run levels
			Check Current Run Level: who -r
		0 - Halt
		1 - Single-user
		2 - Multi-user
		3 - Multi-user w/ Networking
		4 - Not used/Placeholder
		5 - GUI
		6 - Reboot
	Init Scripts
	config: /etc/inittab
	script location: /etc/init.d
	
systemd - /lib/systemd/systemd
	system + user service, process, networking, dns resolution, login, authentication, portable home dir, boot, service-timing, system resource, etc manager.
	Parallel Loading
	Targets
		poweroff.target
		rescue.target
		multi-user.target
		multi-user.target
		multi-user.target
		graphical.target
		reboot.target
			single user dows not need a gui.
	.service files
	config: /etc/systemd/systemd.conf
	unit location: </lib/systemd/system> </etc/systemd/system>
	
Check run levels on system.
	ls -l /etc/rc2.d/

============================================================
systemctl cat default.target
============================================================


============================================================
						Partitions
============================================================
BLOCK DEVICE (Physical or Virtual) >> Partition Table >> Logical Partition >> Filesystem (ext3,ext4,FAT)

Hard disks, USBs, SD cards, or anything with storage space must have at least one partition in order to be used

Multiple partitions can exist on a single storage device, and you can format each partition with a different file system

A partition is the logical segmentation of a single storage device into multiple usable sections

Two main types of HD Partitioning:

	MBR - Master Boot Record

	GPT - GUID (Globally Unique Identifiers) Partition Table

============================================================
systemctl list-dependencies graphical.target
============================================================
systemctl show -p wants graphical.target

all unit files
	systemctl list-unit-files --all
	
	systemctl.cat

============================================================
					Config Files
============================================================
/etc/environment
/etc/profile		- Ineractive Logon Shell
/etc/bash.bashrc	- Interactive NonLogon Shell
~/.profile			- Ineractive Logon Shell
~/.bash_profile		- Ineractive Logon Shell
~/.bashrc			- Interactive NonLogon Shell

============================================================
View file manifest settings
============================================================
    ./sigcheck -m C:\Windows\System32\slui.exe

# View the highest available setting of regedit

    ./sigcheck -m C:\windows\regedit.exe

# How to locate Windows executables that have autoelevate in the manifest

    ./strings –s c:\windows\system32\*.exe | findstr /i autoelevate
    
    ============================================================
Windows Processes
============================================================
Processes
	Powershell
			Get-Process | sort -Property Id | more
			Get-Process | select Name, Id, Description | sort -Property Id | more
			Get-Process smss,csrss,lsass

		#Process exe and dlls
			Get-Process "*chrome*" | Select-Object -ExpandProperty Modules | more
			Get-Process "*chrome*" | Select-Object -ExpandProperty Modules | Where-Object Modulename -like '*chrome*' | sort -Unique

	CLI
		#View all services
			tasklist /v
		#View Images and services
			tasklist /svc
		#View Images and modules
			tasklist /m
		
		tasklist /m /fi "IMAGENAME eq chrome.exe"

============================================================
Services
============================================================
Powershell
		Get-CimInstance Win32_Service | select name,ProcessId,PathName
		Get-Service
		Get-Service ALG | Format-List *
		sc.exe

		Get All Services from registry
			HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services

	CLI
		tasklist /fo:table | more
		
		#List running network services
			net start
	
============================================================
                Scheduled Tasks
============================================================
Powershell
	Get-ScheduledTask | select * | select -First 3

CLI
	schtaks /query /v /fo list

============================================================
			Network Process
============================================================
Powershell
	Get-NetTCPConnection -state Established
	netcat.exe -anob | more
	
CLI
	netstat
  
  ============================================================
Set up Sysinternals
============================================================
Make sysinternals drive
  net use * http://live.sysinternals.com

============================================================
Procmon
============================================================
Captures:
    - Registry = Anything from creating, reading, deleting, or querying keys
    - File System = File creation, writing, deleting, etc and this includes both local and network drives
  - Network = This only shows source and destination TCP/UDP traffic
  - Process = These events are for processes and threads where a process starts, a thread starts or exits, etc. Probably better in ProcExp
  - Profiling = Checks the amount of processor time and memory use of each process
  

============================================================
Autoruns
============================================================
shows applications automatically started on during system boot or login as well as the Registry and file system locations for auto-start configurations.

============================================================
Procexp
============================================================
Task manager and system monitor which collects information on running processes with such features as Hierarchical view of processes, live CPU activity, ability to kill and suspend processes, display DLLs loaded, create process dumps, display handles and much more.

	Colors (Selected by default)
		Green - New Objects - Briefly flashes "Green" before changing into one of the 9 other colors.
		Red - Deleted Objects - Dead.
		Lavender - Own Processes - Processes owned by the current logged in user.
		Salmon - Services
		Gray - Suspended Processes
		Purple - Packed Images -Processes might contain compressed code hidden inside them. Malware uses it because it obfuscates the contents of the file.
		Cyan - Immersive Process - Windows Store App related, Uses Windows 8+ new APIs


============================================================
TCPView
============================================================
Shows you detailed listings of all TCP and UDP endpoints on your system, including the local and remote addresses and state of TCP connections.

	Known malicious ports:
		1337 Leet Port
		31337 Eleet port
		4444 Metasploit default listener port
		
============================================================
PsExec
============================================================
light-weight telnet-replacement that lets you execute processes on other systems, complete with full interactivity for console applications

	Switches
    	-s Run as System account
    	-i interacts with the desktop
    	-c Copy the specified program to the remote system for execution.

============================================================
PsLoggedon
============================================================
Lists users that are logged on currently to a system

	Run
		PsLoggedon.exe
		
============================================================
LogonSessiosn
============================================================
Shows how that user logged on
	.\logonsessions.exe -p

	Logon Types
		2 - Interactive
			A user logged on to this computer.
			
		3 - Network
			A user or computer logged on to this computer from the network.
			
		4 - Batch
			Batch logon type is used by batch servers, where processes may be executing on behalf of a user without their direct intervention.
			
		5 - Service
			A service was started by the Service Control Manager.
			
		7 - Unlock
			This workstation was unlocked.
			
		8 - NetworkCleartext
			A user logged on to this computer from the network. The user’s password was passed to the authentication package in its un-hashed form. The built-in authentication packages all hash credentials before sending them across the network. The credentials do not traverse the network in plaintext (also called cleartext).
			
		9 - NewCredentials
			A caller cloned its current token and specified new credentials for outbound connections. The new logon session has the same local identity, but uses different credentials for other network connections.
			
		10 - RemoteInteractive
			A user logged on to this computer remotely using Terminal Services or Remote Desktop.
			
		11 - CachedInteractive
			A user logged on to this computer with network credentials that were stored locally on the computer. The domain controller was not contacted to verify the credentials.[2]

============================================================
PsList
============================================================
Another command line tool for gathering process information and Allows you to refresh the tool for a specified period of time

	How can I get a process list that updates every 10 seconds for 100 seconds?
		pslist -s 100 -r 10
			-s [n] run for this many seconds
			-r [n] refresh every n seconds
		
============================================================
PsInfo
============================================================
Gathers key system information from both local and remote systems

============================================================
Strings
============================================================
Analyze Windows files using Strings

	Switches
		-a ASCII

Must provide literal file path

============================================================
Handles
============================================================
Shows the handles in use with a process
	handle.exe -p <pid of process> -accepteula

Shows the handles in use with powershell.exe
	handle.exe -p <pid of powershell>
  
  ============================================================
				Startup Processes (sysV)
============================================================
Kernel-space processes 
	- Forked from [kthreadd] ( PID = 2 )
	- Hardware
	- Directly handleds by the kernwe
	Hav ehteir own memory space

User-space processes 
	- Forked from /sbin/init ( PID = 1 )
	

============================================================
				Kernel vs User Space
============================================================
Kernel processes
	- Run in its own memory space
	- Code running ion kernel mode have unrestricted access to processor and main memory
	
User process
	- Run in a separate memory space
	- User space refers to the parts of main memory that the user processes can access.

============================================================
					Process Ownership
============================================================
RUID (Real User ID) 
	Who you are

EUID (Effective User ID)
	Who you are running as
	
Uid < 999
	System User
Uid > 1000
	Regular user

============================================================
					System Calls
============================================================
An interaction between a process and the kernel
	
fork()
	- kernel creates a nearly identical copy of the process

exec()
	- kernel starts program, replacing the current process
	
shell -->> fork() -->> shell
				  -->> copy of shell -->> exec(ls) -->> ls


			Ring 3
		Ring 2
	Ring 1
Ring 0
	Device Drivers
		Device Drivers
			Applications

============================================================
Enumerate Processes
============================================================
View all running processes
	ps -elf
	
View all running processes and thei parent process
	ps -elf --forest
	
View all process with e certain parent process
	ps -lf --forest --ppid 2
	
View all process witouth a certain parent process
	ps -Nlf --forest --ppid 2

Interactive Output of running proceses
	top
		f - Choose fields
		L - Locate string
		
		Average over 1m, 5m, and 15m	
		load average: 1.25
	
	htop
	
	btop
		Faster updating
		Network information

============================================================
			Orphan and Zombie (defunct) Processes
============================================================
Orphan
	- Parent process exited, adopted by sbin/init with PPID of 1
	- All daemons are orphans
		
		#Close a shell/terminal and force all children to be adopted
		disown -a && exit

Zombie
	- completed process, but still has an entry in the process table, waiting on parent to acknowledge or terminate
	- Cant be killed or terminated due to already being terminated.
	- Do not use resources, but do take up an entry of the process table which is a finite resource
	
Fork bomb
	- Denial-of-service attack wherein a process continually replicates itself to deplete available system resources

============================================================
					Daemons (Services)
============================================================
Program that runs as a background process

Daemons
	- All daemons are Orphans, but all orphans are not Daemons
	- Purpose is to manage/monitor a service: {status, start, restart}
	
	Persistance
		Daemons are service that should run for duration of system operation, since init is parent, would require shutdown for parent to die

============================================================
						Cron Jobs
============================================================
cron daemon checks the directories once a minute and executes any commands specified that match the time
	- /var/spool/cron
	- /etc/cron.d
	- /etc/crontab

Two types of cron jobs:
	System Cron Jobs:
		- run as root and rigidly scheduled
		- perform system-wide maintenance tasks
		- controlled by /etc/crontab
	
	User Cron Jobs:
		- Use 'crontab’ command to create user cron jobs
		- stored in /var/spool/cron/crontabs/
		
			    ‘crontab -u [user] file’ - sets users crontab file to the contents of listed file

    			‘crontab -l -u [user]’ - Displays user’s crontab contents

				‘crontab -r -u [user]’ - Removes user’s crontab contents

    			‘crontab -e -u [user]’ - edits user’s crontab contents

    			crontab jobs run with the permissions of the owner of the crontab file
			
View users crontab
	crontab -l
View others users crontab
	crontab -l -u <username>
	
	
	root		cron -f (Parent Process)
	root		CRON -f (Child Process)
	student		<job>

============================================================
				Open files for a command
============================================================

sudo lsof -c <command>
Fields to look at
	Command	Name

Pay attention to numbered files
	Numbered in order of when they were opened
	0 - STDERROR
	1 - STDIN
	2 - STDOUT
	
View open network sockets
	ls -l /proc/net/
	cat /proc/net/<tcp or udp>
  
  ============================================================
					Windows Artifacts
============================================================
Objects or areas within a computer system that contain important information relevant to the activities performed on the system by the user.

Getting User SID
	(POWERSHELL) -- get-wmiobject win32_useraccount | select name,sid 
		Show local and domain Users with SID
	(POWERSHELL) -- get-localuser | select name,sid 
		Show local Users and SID
	(CMD) -- wmic useraccount get name,sid 
	
The GUID represents a particular file extension.
    - CEBFF5CD-ACE2-4F4F-9178-9926F41749EA >>> A list of applications, files, links, and other objects that have been accessed
    - F4E57C4B-2036-45F0-A9AB-443BCFE33D9F >>> Lists the Shortcut Links used to start programs	
		
	The UserAssist registry key tracks the GUI-based programs that were ran by a particular user.
		Get-ItemProperty "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\UserAssist\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\Count"
		
	Look at all users Userassist artifacts
		Get-ItemProperty "Registry::Hkey_Users\*\Software\Microsoft\Windows\CurrentVersion\Explorer\UserAssist\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\Count"
			##Replace * with user sid for looking at specific user.

============================================================
		Windows Background Activity Moderator (BAM)
============================================================
Windows service that Controls activity of background applications.This service exists only in Windows 10 
	Provides:
		- full path of an executable
		- last execution date/time.
		
Location:	HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\bam\State\UserSettings

BAM entries for every user on the system
	Get-Item HKLM:\SYSTEM\CurrentControlSet\Services\bam\state\UserSettings\*
Bam Entries for a specific user
	Get-Item HKLM:\SYSTEM\CurrentControlSet\Services\bam\state\UserSettings\<User SID>

============================================================
						Recycle Bin
============================================================
When a user deletes a file in Windows it goes into the Recycle bin. This data is recoverable during an investigation using built in tools.

Content in the recycle bin is identified by:
	SID - determines which user deleted it
	Timestamp - When it was deleted
	$RXXXXXX - content of deleted files
	$IXXXXXX - original PATH and name
	
Find the Contents of the Recycle Bin
	Get-Childitem 'C:\$RECYCLE.BIN' -Recurse -Verbose -Force
	
Match SID to USER:
	wmic useraccount where 'sid="S-1-5-21-1584283910-3275287195-1754958050-1005"' get name
	
Reads the contents of a particular file within the Recycle BIN
	Get-Content 'C:\$Recycle.Bin\S-1-5-21-1584283910-3275287195-1754958050-1005\$R8QZ1U8.txt'

============================================================
						Prefetch
============================================================
Prefetch files are created by the windows operating system when an application is run from a specific location for the first time.

Shows the programs that were run and when they were executed that are stored in the Prefetch location.
	Get-Childitem -Path 'C:\Windows\Prefetch' -ErrorAction Continue

============================================================
					Jump Lists
============================================================
Engineered to allow users to “jump” or access items they have frequently or recently used quickly and easily.

The data stored in the Automatic Destinations folder will each have a unique file prepended with the AppID of the associated application.
    First time of execution of application.
    Creation Time = First time item added to the AppID file.
    Last time of execution of application w/file open.
    Modification Time = Last time item added to the AppID file.

Programs/Items that were recently used
	Get-Childitem -Recurse C:\Users\*\AppData\Roaming\Microsoft\Windows\Recent -ErrorAction Continue | select FullName, LastAccessTime
	
============================================================
					Recent Files
============================================================
Registry Key that will track the last files and folders opened and is used to populate data in “Recent” menus of the Start menu.
    Tracks last 150 files or folders opened.
    Entry and modification time of this key will be the time and location the last file of a specific extension was opened.
	
Location
    HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs
    HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.txt
	
Query the Hex Value Stored in the Key
	Get-Item 'Registry::\HKEY_USERS\*\Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.*'
	
Converting a Single Value from Hex to Unicode
	[System.Text.Encoding]::Unicode.GetString((gp "REGISTRY::HKEY_USERS\*\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.txt")."0")
Convert all of a users values from HEX to Unicode
	[System.Text.Encoding]::Unicode.GetString((gp "REGISTRY::HKEY_USERS\*\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.txt")."0")
		Get-Item "REGISTRY::HKEY_USERS\*\Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.txt" | select -Expand property | ForEach-Object {
    [System.Text.Encoding]::Default.GetString((Get-ItemProperty -Path "REGISTRY::HKEY_USERS\*\Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.txt" -Name $_).$_)

Get-Item "REGISTRY::HKEY_USERS\*\Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.txt" | select -Expand property | ForEach-Object { [System.Text.Encoding]::Default.GetString((Get-ItemProperty -Path "REGISTRY::HKEY_USERS\*\Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.txt" -Name $_).$_)}

============================================================
					Browser Artifacts
============================================================
Stores details for each user account. Records number of times a site is visited (frequency).

Location
	%USERPROFILE%\AppData\Local\Google\Chrome\User Data\Default\history
		Requires SQlite to view or sysinternals strings.exe

Areas of interest in Google Chrome History Files:
	1. URLS
		The urls table contains the basic browsing history for Chrome. This will include a single instance for all the URLs visited, a timestamp for the last time visited, and a counter for the number of times visited.
	2. Current Session/Tabs
		If you are examining a system that still has an active session available, Chrome will store the browsing activity here under current session and if there are multiple tabs open it will store it under current tabs.
	3. Top Sites
		Chrome shows the user their most frequently visited sites in panels on a homepage, which allows the user to quickly click on a frequently visited site. We recover the data around any URL that is listed as a “Top Site” in Chrome.

Locations
	Frequency
		.\strings.exe 'C:\users\andy.dwyer\AppData\Local\Google\Chrome\User Data\Default\History'
	Most visited
		strings.exe 'C:\users\andy.dwyer\AppData\Local\Google\Chrome\User Data\Default\Top Sites'
	User Names
		strings.exe  'C:\users\andy.dwyer\AppData\Local\Google\Chrome\User Data\Default\Login Data'

============================================================
						Event Logs
============================================================
Logs are records of events that happen in your computer, such as when a user logs on to the computer or when a program encounters an error.

3 types of logs:
	- Application Log
	- Security Log
	- System Log
	
Locations
*.evtx files accessed by:
    Windows Event View Application
    Get-Eventlog or Get-WinEvent in Powershell
    wevtutil in Command Prompt
	
Viewing Logs in Command Prompt
	wevtutil el
	
View Event Logs in Powershell
	Get-EventLog -LogName System -Newest 3 | Format-Table -Wrap -Autosize
	
Search the Security Event Log and show the entire message
	Get-Eventlog -LogName Security | ft -wrap
	
Search through the entire Security log for a specific string
	Get-Eventlog -LogName Security | ft -wrap | findstr /i StR1nG
	
- Get-EventLog is limited to the default Windows Logs of Security, Application, System,and Windows Powershell (Windows 8.1 and up)

- Get-Winevent will cover all the default eventlogs and all of the remaining custom application logs

============================================================
						Logging
============================================================
A record of performance, events, or day-to-day activities
	
Log Types:
	Authentication
	- /var/log/auth.log > Authentication related events
	- /var/run/utmp > Users currently logged in
	- /var/log/wtmp > History file for utmp
	- /var/log/btmp > Failed login attempts
	
	Application
	- apache > Web Server (dir)
	- apt > Package manager (dir)
	- /var/log/mysql.log
	
	System
	- /Var/log/messages > Legacy Catch All
	- /var/log/syslog > Ubuntu/Debian Catch All
	- dmesg = Device Messenger (Queries /proc/kmsg)
		Kernel Ring Buffer - Never fills
		First logs generated by the system
		
Logging at a glance
	Locations: /var/log
	Config File: /etc/rsyslog.conf
	Service: /usr/sbin/rsyslogd
	


============================================================
					Logging Daemon
============================================================
RFC 5424

/usr/sbin/rsyslogd
	User space daemon - Reads messages written to /dev/log and formats and stores them based on /etc/rsyslog.conf rules.
		syslog() via libc
    	kernel ring buffer
    	audit records via audit subsystem (auditd)
		
/etc/rsyslog.conf
	Log entries follow syslog standard facility.severity
    facility = what program, or part of system, log is from
	severity = urgency
	
Facility Codes
	0   kernel messages
	1   user-level messages
	2   mail system
	3   system daemons
	4   security/authorization messages
	5   messages generated internally by syslogd
	6   line printer subsystem
	7   network news subsystem
	8   UUCP subsystem
	9   clock daemon
	10  security/authorization messages
	11  FTP daemon
	12  NTP subsystem13|log audit
	
Severity Codes
	0  emerg, panic:  Emergency: system is unusable
	1  alert:         Action must be taken immediately
	2  crit:          Critical conditions
	3  err, error:    Error conditions
	4  warn, warning: Warning conditions
	5  notice:        Normal but significant condition
	6  info:          Informational messages
	7  Debug:         Debug-level messages

============================================================
			Log Enumeration / Management
============================================================
Best Practices
	- Meaningful Naming Schema
	- Separate logs logically and by precedence
	- Sync time across network
	- Control log access
Utilize cron jobs / scripts
	- Logrotate
		/etc/logrotate.conf
		How large to let files get. How long to keep them.
		
============================================================
				Useful Logging Commands
============================================================
tail -f - Continuously show end of file
less /var/log/syslog - View Log in page viewer
logger - Send a user generated message to system Log i.e. Starting Update
> /var/log/messages - Wipes Logs
last -f /var/log{wtmp,btmp} - Needed to view data files

============================================================
				Auditing vs Logging
============================================================
Logging system/application defined
Auditing is user defined
[kauditd] - runs at the kernel level and can monitor individual syscalls (/sbin/auditd)
auditctl - control/config command
aureport - summary reports of audit logs
ausearch - query audit logs

# Wipe rule cponfig file for auditd
	cat /dev/null > /etc/audit/audit.rules

# List any Filesystem or System Call rules
	auditctl -l

# Show summary report
	aureport
	
# Show authentication logs
	aureport -au

============================================================
						Journald
============================================================
Systemd logging daemon

Tell journalctl to show the last logs its received with -e
	journalctl -e
	
Show boot ids which separate logs based on when the machine was restarted
	ournalctl --list-boots

Tell journalctl to only show logs relating to that boot id.
	journalctl -b b3076f6774b841e08c19236bf327f529
	
Show only ssh.service logs in journalctl
	journalctl -u ssh.service

Filtering Logs since a specific time period
	journalctl -u ssh.service --since "2 days ago"

============================================================
					Log Rotation
============================================================
Show Log Rotations
	cat /etc/logrotate.conf
	
Show rotated logs
	ls -l /var/log

##vim and zcat will read zip files without extracting them.

============================================================
					Markup Languages
============================================================
- Human readable, but designed to be parsed using special programs.
- Uses a schema like HTML so it has tags and attributes like a webpage. Also, it is serialized.

Example
	Xpath Syntax: xpath -q -e '//element/@attribute' file.xml

Take out certain entries in vim
	:%! egrep -i -v
	
============================================================
						JSON
============================================================
Prettyprint
	jq . <file>
  
  ============================================================
					Active Directory
============================================================
Adminsitrator Best Practices
	- Least privilege
		Enure users only have enough permissions to do their job.
	- Group Nesting
		Dont have group inside other groups, as they will take the permissions of the parent group
	- Administrator Local Login
		Local logining in to admin accounts should be disabled.

	Get-ADDefaultDomainPasswordPolicy
Get active directory forest
	get-adforest
get domains
	get-addomain
Find all domain groups
	get-adgroup -filter *
	
Get specific domain group and users
	get-adgroup -Identity 'Power Users' -recursive
		get-adgroupmember -Identity 'Power Users' -recursive
		
get all active domain users
	get-adgroupmember -Identity 'Power Users' -recursive
	
view specific domain user
	get-aduser -Identity 'Ramon.Gibbs' -Properties description, telephonenumber
	get-aduser -Identity 'Ramon.Gibbs' -Properties *

============================================================
					Sid Breakdown
============================================================
S-1-5-32-546

S = SID identifier
1 = Revision level
5 = Identifier Atuhroity Level
32 = First subauthority value
546 = Second subauthority value

============================================================
					Enumerate users
============================================================
Find disabled users
	GET-ADUSER -Filter {Enabled -eq "FALSE"} -Properties name, enabled
	
Enalbe user and give them a privileged group
	Enable-ADAccount -Identity Guest
	Set-AdAccountPassword -Identity guest -NewPassword (ConvertTo-SecureString -AsPlaintext -String "PassWord12345!!" -Force)
	get-adgroup -filter *
	Add-ADGroupMember -Identity "Administrators" -members Guest
	
View all admin group members that are enabled
	Get-ADGroupMember -Identity "Administrators" -Recursive | %{Get-ADUser -Identity $_.DistinguishedName} | select name, Enabled

============================================================
 Resultant Set of Policy (RSoP)
============================================================
gpresult /user administrator /v
geresult /r

============================================================
Group Nesting
============================================================
	Get-ADGroupMember -Identity 'Domain Admins' | select name
		name
		----
		Administrator
		System Admins LV1
		
	Get-ADGroupMember -Identity 'System Admins LV1' | select name
		name
		----
		System Admins
		
	Get-ADGroupMember -Identity 'System Admins' | select name
		

============================================================
			Memory Analysis Using Volatility
============================================================
Order of Volatility - The Halflife of Data
	1. CPU registers, cache
	2. Routing Table, ARP cache, proccess table, kernel stats, memory
	3. Temporary file systems
	4. Disk
	5. Remote logging and monitoring data
	6. Physical configuration, network topology
	7. Archival media - backups

============================================================
				Installing Volatility
============================================================
Installing the Python version of Volatility
	Download python < 3.0

            Click "Add python to path"

        Download Volatility from git

        Run install: setup.py install
		
		    Some dependencies are missing. Need to install:

        diStorm3

            click "distorm3-3.3.4.win-amd64.exe"

        Visual C++ Compiler

        pyCrypto or python -m pip install pycrypto

        Yara for python 2.7

        openpyxl: python -m pip install openpyxl

        ujson: python -m pip install ujson

============================================================
					Aquiring Memory
============================================================
cd 'C:\Users\andy.dwyer\Desktop\Memory Analysis'

#Help page
.\volatility_2.6_win64_standalone.exe -h

#Grab image info
.\volatility_2.6_win64_standalone.exe -f .\cridex.vmem imageinfo

#Grab Last Running Processes
.\volatility_2.6_win64_standalone.exe -f .\cridex.vmem --profile=WinXPSP2x86 pslist
.\volatility_2.6_win64_standalone.exe -f .\cridex.vmem --profile=WinXPSP2x86 psscan
.\volatility_2.6_win64_standalone.exe -f .\cridex.vmem --profile=WinXPSP2x86 pstree

#Dump a specific executable to determine if ,alware of some kind.
.\volatility_2.6_win64_standalone.exe -f .\cridex.vmem --profile=WinXPSP2x86 procdump -p 1640 -D .
ls
Get-FileHash .\executable.1640.exe

#Memory Dump
.\volatility_2.6_win64_standalone.exe -f .\cridex.vmem --profile=WinXPSP2x86 memdump -p 1640 -D .
C:\Users\andy.dwyer\Desktop\SysinternalsSuite\strings.exe -accepteula .\1640.dmp > .\1640.txt
    #edit with notepad++
    #search -> find -> regex ^((25[0-5]|(2[0-4]|1\d|[1-9]|)\d)\.?\b){4}$

#Active TCP Connections
.\volatility_2.6_win64_standalone.exe -f .\cridex.vmem --profile=WinXPSP2x86 connections
#Most Recent Connections
.\volatility_2.6_win64_standalone.exe -f .\cridex.vmem --profile=WinXPSP2x86 connscan
