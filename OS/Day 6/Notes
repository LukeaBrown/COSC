============================================================
							BIOS
============================================================
Check Bios Information
	sudo dmidecode -t bios
	
Check for EUFI System
	ls /sys/firmware

============================================================
				MBR Partition Table Scheme
============================================================

446 bytes	{ Boot Loader }
64 bytes	{ Partition Table }
2 bytes		{ Magic Number }

Find what disks are on the system
	lsblk
	df -h
	
Hexdumps
	xxd -l 512 -g 1 <Drive Name>
	
		00000000: eb 63 90 00 00 00 00 00 00 00 00 00 00 00 00 00  .c..............
		00000010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
		00000020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
		00000030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
		00000040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
		00000050: 00 00 00 00 00 00 00 00 00 00 00 80 01 00 00 00  ................
		00000060: 00 00 00 00 ff fa 90 90 f6 c2 80 74 05 f6 c2 70  ...........t...p
		00000070: 74 02 b2 80 ea 79 7c 00 00 31 c0 8e d8 8e d0 bc  t....y|..1......
		00000080: 00 20 fb a0 64 7c 3c ff 74 02 88 c2 52 bb 17 04  . ..d|<.t...R...
		00000090: f6 07 03 74 06 be 88 7d e8 17 01 be 05 7c b4 41  ...t...}.....|.A
		000000a0: bb aa 55 cd 13 5a 52 72 3d 81 fb 55 aa 75 37 83  ..U..ZRr=..U.u7.
		000000b0: e1 01 74 32 31 c0 89 44 04 40 88 44 ff 89 44 02  ..t21..D.@.D..D.
		000000c0: c7 04 10 00 66 8b 1e 5c 7c 66 89 5c 08 66 8b 1e  ....f..\|f.\.f..
		000000d0: 60 7c 66 89 5c 0c c7 44 06 00 70 b4 42 cd 13 72  `|f.\..D..p.B..r
		000000e0: 05 bb 00 70 eb 76 b4 08 cd 13 73 0d 5a 84 d2 0f  ...p.v....s.Z...
		000000f0: 83 d0 00 be 93 7d e9 82 00 66 0f b6 c6 88 64 ff  .....}...f....d.
		00000100: 40 66 89 44 04 0f b6 d1 c1 e2 02 88 e8 88 f4 40  @f.D...........@
		00000110: 89 44 08 0f b6 c2 c0 e8 02 66 89 04 66 a1 60 7c  .D.......f..f.`|
		00000120: 66 09 c0 75 4e 66 a1 5c 7c 66 31 d2 66 f7 34 88  f..uNf.\|f1.f.4.
		00000130: d1 31 d2 66 f7 74 04 3b 44 08 7d 37 fe c1 88 c5  .1.f.t.;D.}7....
		00000140: 30 c0 c1 e8 02 08 c1 88 d0 5a 88 c6 bb 00 70 8e  0........Z....p.
		00000150: c3 31 db b8 01 02 cd 13 72 1e 8c c3 60 1e b9 00  .1......r...`...
		00000160: 01 8e db 31 f6 bf 00 80 8e c6 fc f3 a5 1f 61 ff  ...1..........a.
		00000170: 26 5a 7c be 8e 7d eb 03 be 9d 7d e8 34 00 be a2  &Z|..}....}.4...
		00000180: 7d e8 2e 00 cd 18 eb fe 47 52 55 42 20 00 47 65  }.......GRUB .Ge
		00000190: 6f 6d 00 48 61 72 64 20 44 69 73 6b 00 52 65 61  om.Hard Disk.Rea
		000001a0: 64 00 20 45 72 72 6f 72 0d 0a 00 bb 01 00 b4 0e  d. Error........
		000001b0: cd 10 ac 3c 00 75 f4 c3 fa b7 12 e6 00 00 80 00  ...<.u..........
		000001c0: 21 02 83 07 26 20 00 08 00 00 df f7 ff 07 00 00  !...& ..........
		000001d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
		000001e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
		000001f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 55 aa  ..............U.
															|	|
															Magic Number

Byte to Byte Copy of File
	dd if=/dev/sda of=/MBRcopy bs=1 count=512
	
============================================================
						Boot Loader
============================================================
GRUB - Grand Unified Bootloader
	- Dynamically configurable with the capability to make changes during boot
    	Config File - /boot/grub/grub.cfg
		Altering boot entries, selecting different kernels, and modifying the initial RAM disk (initrd)

	- OS Selection screen where if no choice is made, default kernel specified in the grub configuration file

	- Bootloader (GRUB) passes text based kernel parameters (Ex. root=UUID=70cc6e89…,ro, splash). If not recognized, the option will be passed to init (i.e. ‘-s’ for single-user mode)

	- Kernel options are sometimes configurable at the menu with the ‘e’ key
	
Loads Kernel - linux /boot/vmlinuz-5.15.0-52-generic root=LABEL=cloudimg-rootfs ro  console=tty1 console=ttyS0
Loads additional items for kernel - initrd /boot/initrd.img-5.15.0-52-generic

============================================================
							Kernel
============================================================
	Uncompresses itself into RAM

	Establishes memory management, detects CPU type, page tables

	Mounts the root ‘/ ’ filesystem

	kernel is process 0 [kthreadd]

	Executes /sbin/init or systemd daemon, the very first process started by the kernel with a process ID (PID) of 1

	‘ls -l /sbin/init’ to determine which Init system you are using

============================================================
						Init
============================================================
    Configures the environment for the system

        Looks at the /etc/inittab

        Available run levels 0 - 6

        Identifies the default 'init' run level from /etc/inittab and uses that to load all the appropriate programs

        The entire startup process is handled by scripts

            /etc/init.d/

            Scripts that run ‘S’tart and ‘K’ill scripts out of applicable rc folders

        'service <service name> start | stop | restart | status | reload | …​''

        ‘service --status-all’

============================================================
Big Mike Got Killed In Russia
============================================================
BIOS

MBR

GRUB

Kernel

Init

Run Levels

============================================================
SysVinit vs systemd
============================================================
sysvinit - /sbin/init
	sevice manager
	process manager
	serial loading
	Run levels
			Check Current Run Level: who -r
		0 - Halt
		1 - Single-user
		2 - Multi-user
		3 - Multi-user w/ Networking
		4 - Not used/Placeholder
		5 - GUI
		6 - Reboot
	Init Scripts
	config: /etc/inittab
	script location: /etc/init.d
	
systemd - /lib/systemd/systemd
	system + user service, process, networking, dns resolution, login, authentication, portable home dir, boot, service-timing, system resource, etc manager.
	Parallel Loading
	Targets
		poweroff.target
		rescue.target
		multi-user.target
		multi-user.target
		multi-user.target
		graphical.target
		reboot.target
			single user dows not need a gui.
	.service files
	config: /etc/systemd/systemd.conf
	unit location: </lib/systemd/system> </etc/systemd/system>
	
Check run levels on system.
	ls -l /etc/rc2.d/

============================================================
systemctl cat default.target
============================================================


============================================================
						Partitions
============================================================
BLOCK DEVICE (Physical or Virtual) >> Partition Table >> Logical Partition >> Filesystem (ext3,ext4,FAT)

Hard disks, USBs, SD cards, or anything with storage space must have at least one partition in order to be used

Multiple partitions can exist on a single storage device, and you can format each partition with a different file system

A partition is the logical segmentation of a single storage device into multiple usable sections

Two main types of HD Partitioning:

	MBR - Master Boot Record

	GPT - GUID (Globally Unique Identifiers) Partition Table

============================================================
systemctl list-dependencies graphical.target
============================================================
systemctl show -p wants graphical.target

all unit files
	systemctl list-unit-files --all
	
	systemctl.cat

============================================================
					Config Files
============================================================
/etc/environment
/etc/profile		- Ineractive Logon Shell
/etc/bash.bashrc	- Interactive NonLogon Shell
~/.profile			- Ineractive Logon Shell
~/.bash_profile		- Ineractive Logon Shell
~/.bashrc			- Interactive NonLogon Shell

============================================================

============================================================


============================================================

============================================================


