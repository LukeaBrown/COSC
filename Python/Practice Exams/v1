______________________________Q1______________________________
============================================================
'''
Given the floatstr, which is a comma separated string of
floats, return a list with each of the floats in the 
argument as elements in the list.
'''
============================================================
def q1(floatstr):
  newList = []
  for y in floatstr.split(','):
    newList.append(float(y))
  return newList
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  return [float(x) for x in floatstr.split(',')]
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  return list(map(float,floatstr.split(',')))
============================================================
______________________________Q2______________________________
============================================================
def q2(*args):
  s = 0
  for arg in args:
    s += arg
  return s/len(args)
  pass
============================================================
______________________________Q3______________________________
============================================================
def q3(lst,n):
  return lst[-n:]
  pass
============================================================
______________________________Q4______________________________
============================================================
def q4(strng):
  ordNum = []
  for i in strng:
    ordNum.append(ord(i))
  return ordNum
  pass
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  return list(map(ord,strng))
  pass
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  return [ord(x) for x in list(strng)]
============================================================
______________________________Q5______________________________
============================================================
def q5(strng):
  return tuple(strng.split())
  pass
============================================================
______________________________Q6______________________________
============================================================
total = []
for product in catalog:
  for item in order:
    if item[0] == product:
      total.append(catalog[product] * item[1])
return sum(total)
============================================================
______________________________Q7______________________________
============================================================

============================================================
______________________________Q8______________________________
============================================================

============================================================
______________________________Q9______________________________
============================================================
def q9(miltime):
  total = []
  for product in catalog:
    for item in order:
      if item[0] == product:
        total.append(catalog[product] * item[1])
  return sum(total)
============================================================
______________________________Q10______________________________
============================================================
def q10(numlist):
  for i in numlist:
    if i < 0:
      return False
  return True
============================================================
